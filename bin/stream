#!/bin/bash

## @file
# This is a script I picked up from reddit. It lets you stream both your
# audio input and selected apps into the virtual microphone. To make it
# work, please specify appropriate sinks. To find out what are the names,
# run "pactl list sources" or "pactl list sinks".
# @date 2022

INPUT_SINK="alsa_input.usb-Burr-Brown_from_TI_USB_Audio_CODEC-00.analog-mono"
OUTPUT_SINK="alsa_output.usb-Burr-Brown_from_TI_USB_Audio_CODEC-00.analog-stereo-output"


# Create two sinks
# The first sink (RECORDING_SINK) captures application audio which is routed to headphones and to the second sink
# The second sink (COMBINED_SINK) receives both microphone audio and audio from the first sink and functions as a mixer to deliver the audio to discord
RECORDING_SINK=$(pactl load-module module-null-sink sink_name=Recording_Sink sink_properties=device.description="Recording_Sink")
COMBINED_SINK=$(pactl load-module module-null-sink sink_name=Combined_Sink sink_properties=device.description="Combined_Sink")

# A virtual mic is created from the Combined sink monitor to expose it to discord
VIRTUAL_MIC=$(pactl load-module module-remap-source master=Combined_Sink.monitor source_name=VirtualMic source_properties=device.description="VirtualMic")

# Audio Routing
# Route mic input to Combined_Sink
# Route Recording_Sink monitor to Combined_Sink
# Route Recording_Sink monitor to headphones
pacmd load-module module-loopback source=$INPUT_SINK sink=Combined_Sink latency_msec=1 >> /dev/null
pacmd load-module module-loopback rate=44000 adjust_time=0 source=Recording_Sink.monitor sink=Combined_Sink latency_msec=1 >> /dev/null
pacmd load-module module-loopback rate=44000 adjust_time=0 source=Recording_Sink.monitor sink=$OUTPUT_SINK latency_msec=1 >> /dev/null

# Now you can select from pavucontrol which apps do you want to send
# to the recording sink.
read -p "Loaded! Press enter to unload!"

pacmd unload-module $VIRTUAL_MIC
pacmd unload-module $RECORDING_SINK
pacmd unload-module $COMBINED_SINK
pacmd unload-module module-loopback
